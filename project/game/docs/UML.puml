@startuml

class BotMeta <<metaclass>> {
    +__new__(cls, name: str, bases: tuple, attrs: dict) : type
}

class Bot {
    -_name : str
    -_hand : Hand
    -_balance : float
    -_is_active : bool
    -_current_bet : float
    -_bet : Bet
    +__init__(name: str, bet_amount: float = 0.0) : None
    -_place_bet(amount: float) : None
    -_reset_hand() : None
}

class Hand {
    -_cards : List[Card]
    +__init__() : None
    -_add_card(card: Card) : None
    -_calculate_score(target_score: int = 21) : int
    -_reset() : None
}

class Bet {
    -_amount : float
    +__init__(amount: float) : None
}

class ConservativeBot {
    +strategy : str = "conservative"
}

class AggressiveBot {
    +strategy : str = "aggressive"
}

class MixedBot {
    +strategy : str = "mixed"
}

class BalancedBot {
    +strategy : str = "balanced"
}

class IntuitiveBot {
    +strategy : str = "intuitive"
    +decide(target_score: int = 21) : bool
}

class Card {
    -_suit : str
    -_rank : int
    -_value : int
    +__init__(suit: str, rank: int) : None
    +__repr__() : str
}

class Deck {
    -_suits : List[str]
    -_ranks : List[int]
    -_cards : List[Card]
    +__init__() : None
    -_draw_card() : Optional[Card]
}

class GameMeta <<metaclass>> {
    +__new__(cls, name: str, bases: tuple, attrs: dict) : type
}

class Game {
    -_deck : Deck
    -_bots : List[Bot]
    -_max_steps : int
    -_current_step : int
    -_output_file : Optional[str]
    +__init__(bots: List[Bot], max_steps: int = 10, output_file: Optional[str] = None, target_score: Optional[int] = None) : None
    -_log(message: str) : None
    -_show_initial_state() : None
    -_show_final_state(winner: Optional[Bot] = None, total_winnings: Optional[int] = None) : None
    -_show_state() : None
    -_play_round() : None
    -determine_winner() : Optional[Bot]
    -_distribute_pot(winner: Bot) : None
    -_play_game() : None
    +target_score : int
}

BotMeta ..> Bot
GameMeta ..> Game
Bot o-- Hand
Bot o-- Bet
Hand o-- Card
Deck o-- Card
Game *-- Deck
Game *-- Bot : "creates"

Bot <|-- ConservativeBot
Bot <|-- AggressiveBot
Bot <|-- MixedBot
Bot <|-- BalancedBot
Bot <|-- IntuitiveBot

@enduml
  